This is the README for our C compiler implemented in Python

The source language as specified is C and the platform for running the file is intel X86.
# Usage instructions
## For running standalone lexer for  
``` ./src/lexer <input file> ```

For running the parser,
``` ./src/parser <input file name> ```

##The output produced will be in the file ParseTree.png. 

## To produce output in user defined file name, the command is

./parser -o <output file name> <input file name


##We have also implemented some flags like -o -help -v

## For removing the extra files generated, the command is 
make clean

Libraries used 
python2 or python3
ply
pydot

Additional features
Error reporting
If there is an error in the source code the parser reports all the errors in the file but does not generate the graph.

References
lexer and parser: https://github.com/eliben/pycparser

Code1.c: https://www.programiz.com/c-programming/examples/prime-number-intervals

Code2.c: https://www.programiz.com/c-programming/examples/quadratic-roots

Code3.c:https://www.programiz.com/c-programming/examples/product-numbers

Code4.c https://www.tutorialspoint.com/data_structures_algorithms/merge_sort_program_in_c.htm

Code5.c https://www.programiz.com/c-programming/examples/remainder-quotient